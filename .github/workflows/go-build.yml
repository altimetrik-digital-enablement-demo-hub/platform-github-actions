name: Go Build Pipeline v2

on:
  workflow_call:
    inputs:
      app-name:
        description: 'Name of the application (used for binary name, image name, etc.)'
        required: true
        type: string
      go-version:
        description: 'Go version to use'
        required: false
        type: string
        default: '1.24'
      main-package-path:
        description: 'Path to the main package (where main.go is located)'
        required: true
        type: string
      registry:
        required: false
        type: string
        description: 'Container registry URL (e.g., ghcr.io, AWS ECR)'
        default: 'ghcr.io'
      docker-context:
        description: 'Context for Docker build'
        required: false
        type: string
        default: '.'
      docker-file:
        description: 'Dockerfile path'
        required: false
        type: string
        default: './Dockerfile'
      docker-push:
        description: 'Push the Docker image to the registry'
        required: false
        type: boolean
        default: true
      run-trivy:
        description: 'Run Trivy Scan'
        required: false
        default: 'true'
        type: string
      run-grype:
        description: 'Run Grype Scan'
        required: false
        default: 'true'
        type: string
      continue-on-error:
        description: 'Continue on error for security scans'
        required: false
        default: 'true'
        type: string

permissions:
  actions: read
  contents: write
  security-events: write
  checks: write          
  pull-requests: write
  issues: write
  packages: write    
  id-token: write    

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Lint Go code
        uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/go/lint@feature/DDH-106-go
        with:
          go-version: ${{ inputs.go-version }}

  unit-test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Run unit tests
        uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/go/unit-test@feature/DDH-106-go
        with:
          go-version: ${{ inputs.go-version }}

  version:
    runs-on: ubuntu-latest
    needs: [unit-test]
    outputs:
      image-tag: ${{ steps.version.outputs.image-tag }}
      version-tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Generate version and image tag
        id: version
        uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/go/image-tag@feature/DDH-106-go

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: [version]
    outputs:
      full-image-name: ${{ steps.package.outputs.full-image-name }}
    steps:
      - name: Build and push Docker image
        id: package
        uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/go/package@feature/DDH-106-go
        with:
          app-name: ${{ inputs.app-name }}
          go-version: ${{ inputs.go-version }}
          main-package-path: ${{ inputs.main-package-path }}
          context: ${{ inputs.docker-context }}
          docker-file: ${{ inputs.docker-file }}
          image-tag: ${{ needs.version.outputs.image-tag }}
          registry: ${{ inputs.registry }}
          push: ${{ inputs.docker-push }}
          token: ${{ secrets.GITHUB_TOKEN }}

  docker-scan:
    runs-on: ubuntu-latest
    needs: [version, docker-build-and-push]
    permissions:
      security-events: write
      actions: read
      contents: read
      packages: read
    steps:
      - name: Trivy scan
        uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/common/security-scanner/trivy-scan@feature/DDH-106-go
        if: ${{ inputs.run-trivy == 'true' }}
        continue-on-error: ${{ inputs.continue-on-error == 'true' }}
        with:
          version: ${{ needs.version.outputs.image-tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          severity: 'CRITICAL,HIGH'

      - name: Generate Trivy dashboard report
        uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/common/github-actions/git-dashboard@feature/DDH-106-go
        if: ${{ inputs.run-trivy == 'true' }}
        continue-on-error: ${{ inputs.continue-on-error == 'true' }}
        with:
          tool: 'Trivy'
          report: 'trivy-report.txt'
          critical_keyword: 'CRITICAL'
          high_keyword: 'HIGH'

      - name: Grype scan
        uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/common/security-scanner/grype-scan@feature/DDH-106-go
        if: ${{ inputs.run-grype == 'true' }}
        continue-on-error: ${{ inputs.continue-on-error == 'true' }}
        with:
          version: ${{ needs.version.outputs.image-tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Grype dashboard report
        uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/common/github-actions/git-dashboard@feature/DDH-106-go
        if: ${{ inputs.run-grype == 'true' }}
        continue-on-error: ${{ inputs.continue-on-error == 'true' }}
        with:
          tool: 'Grype'
          report: 'grype-report.txt'
          critical-keyword: 'CRITICAL'
          high-keyword: 'HIGH'
          

  security-scan:
    runs-on: ubuntu-latest
    needs: [lint]
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Set up Go
        uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/go/setup@feature/DDH-106-go
        with:
          go-version: ${{ inputs.go-version }}
      
      - name: Run CodeQL security analysis
        uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/common/static-code-analysis/codeql@feature/DDH-106-go
        with:
          languages: go 