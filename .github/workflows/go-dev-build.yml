name: Go Dev Build Pipeline

on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
      go-version:
        required: false
        type: string
        default: '1.24'
      registry-url:
        required: false
        type: string
        description: 'Container registry URL (e.g., AWS ECR)'
      push-to-registry:
        required: false
        type: boolean
        default: false
        description: 'Push to registry instead of saving as tar'
      deploy-k8s:
        required: false
        type: boolean
        default: false
        description: 'Deploy to Kubernetes'
      deploy-aws:
        required: false
        type: boolean
        default: true
        description: 'Deploy to AWS App Runner'
      deploy-azure:
        required: false
        type: boolean
        default: false
        description: 'Deploy to Azure Container Apps'

permissions:
  actions: read
  contents: read
  security-events: write
  checks: write          # for test summary
  pull-requests: write
  issues: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.setup-tag.outputs.image-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup image tag
        id: setup-tag
        uses: osru-leu/platform-github-actions/.github/actions/common/setup-tag@feature/workflows

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Go code
        uses: osru-leu/platform-github-actions/.github/actions/go-templates/lint@feature/workflows
        with:
          go-version: ${{ inputs.go-version }}
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run unit tests
        uses: osru-leu/platform-github-actions/.github/actions/go-templates/unit-test@feature/workflows
        with:
          go-version: ${{ inputs.go-version }}
      
      - name: Generate Test Summary
        if: always()
        run: |
          echo "## Test Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "✅ Unit tests completed" >> $GITHUB_STEP_SUMMARY
          echo "📊 Coverage report generated" >> $GITHUB_STEP_SUMMARY
          echo "📦 Test artifacts uploaded" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "- 🏗️ Building application binary" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 Packaging into Docker container" >> $GITHUB_STEP_SUMMARY
          echo "- 🔒 Running security scans" >> $GITHUB_STEP_SUMMARY
          
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Go application
        uses: osru-leu/platform-github-actions/.github/actions/go-templates/build@feature/workflows
        with:
          app-name: ${{ inputs.app-name }}
          go-version: ${{ inputs.go-version }}

  package:
    runs-on: ubuntu-latest
    needs: [build, setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Package application
        uses: osru-leu/platform-github-actions/.github/actions/common/package@feature/workflows
        with:
          app-name: ${{ inputs.app-name }}
          image-tag: ${{ needs.setup.outputs.image-tag }}
          binary-artifact-name: ${{ inputs.app-name }}-binary
          registry-url: ${{ inputs.registry-url }}
          push-to-registry: ${{ inputs.push-to-registry }}

  security:
    runs-on: ubuntu-latest
    needs: [package, setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Security scan
        uses: osru-leu/platform-github-actions/.github/actions/common/security-scan@feature/workflows
        with:
          app-name: ${{ inputs.app-name }}
          image-tag: ${{ needs.setup.outputs.image-tag }}
          languages: 'go'
          go-version: ${{ inputs.go-version }}

  deploy-k8s:
    runs-on: ubuntu-latest
    needs: [security, setup]
    if: inputs.deploy-k8s
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Deploy to Kubernetes
        uses: osru-leu/platform-github-actions/.github/actions/common/deploy-k8s@feature/workflows
        with:
          app-name: ${{ inputs.app-name }}
          environment: dev
          image-tag: ${{ needs.setup.outputs.image-tag }}
          namespace: default
          replicas: 2

  deploy-aws:
    runs-on: ubuntu-latest
    needs: [security, setup]
    if: inputs.deploy-aws
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Deploy to AWS App Runner
        uses: osru-leu/platform-github-actions/.github/actions/common/deploy-aws-apprunner@feature/workflows
        with:
          app-name: ${{ inputs.app-name }}
          environment: dev
          image-tag: ${{ needs.setup.outputs.image-tag }}
          image-repository: ${{ inputs.registry-url }}

  deploy-azure:
    runs-on: ubuntu-latest
    needs: [security, setup]
    if: inputs.deploy-azure
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Deploy to Azure Container Apps
        uses: osru-leu/platform-github-actions/.github/actions/common/deploy-azure-containerapp@feature/workflows
        with:
          app-name: ${{ inputs.app-name }}
          environment: dev
          image-tag: ${{ needs.setup.outputs.image-tag }}
          image-repository: ${{ inputs.registry-url }}
          resource-group: 'rg-container-apps'
          location: 'eastus'
