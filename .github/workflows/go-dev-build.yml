name: Go Dev Build Pipeline

on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
      go-version:
        required: false
        type: string
        default: '1.24'
      registry-url:
        required: false
        type: string
        description: 'Container registry URL (e.g., AWS ECR)'
      push-to-registry:
        required: false
        type: boolean
        default: false
        description: 'Push to registry instead of saving as tar'

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.setup-tag.outputs.image-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup image tag
        id: setup-tag
        uses: osru-leu/platform-github-actions/.github/actions/common/setup-tag@feature/workflows

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Go code
        uses: osru-leu/platform-github-actions/.github/actions/go-templates/lint@feature/workflows
        with:
          go-version: ${{ inputs.go-version }}
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run unit tests
        uses: osru-leu/platform-github-actions/.github/actions/go-templates/unit-test@feature/workflows
        with:
          go-version: ${{ inputs.go-version }}

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Go application
        uses: osru-leu/platform-github-actions/.github/actions/go-templates/build@feature/workflows
        with:
          app-name: ${{ inputs.app-name }}
          go-version: ${{ inputs.go-version }}

  package:
    runs-on: ubuntu-latest
    needs: [build, setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Package application
        uses: osru-leu/platform-github-actions/.github/actions/common/package@feature/workflows
        with:
          app-name: ${{ inputs.app-name }}
          image-tag: ${{ needs.setup.outputs.image-tag }}
          binary-artifact-name: ${{ inputs.app-name }}-binary
          registry-url: ${{ inputs.registry-url }}
          push-to-registry: ${{ inputs.push-to-registry }}

  security:
    runs-on: ubuntu-latest
    needs: [package, setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Security scan
        uses: osru-leu/platform-github-actions/.github/actions/common/security-scan@feature/workflows
        with:
          app-name: ${{ inputs.app-name }}
          image-tag: ${{ needs.setup.outputs.image-tag }}

  deploy:
    runs-on: ubuntu-latest
    needs: [security, setup]
    steps:
      - name: Deploy application
        uses: osru-leu/platform-github-actions/.github/actions/common/publish@feature/workflows
        with:
          app-name: ${{ inputs.app-name }}
          environment: dev
          image-tag: ${{ needs.setup.outputs.image-tag }}
          deploy-k8s: 'true'
          deploy-aws: 'false'
          deploy-azure: 'true'
          azure-resource-group: 'rg-container-apps'
          azure-location: 'eastus'
