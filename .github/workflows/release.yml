name: Node.js Release Workflow
  
on:
  workflow_call:
    inputs:
      version-bump:
        description: 'Version bump type (auto, major, minor, patch)'
        required: false
        type: string
        default: auto
        
      manual-version:
        description: 'Manual version (e.g., 1.2.3) - overrides version_bump'
        required: false
        type: string
    
      registry:
        description: 'Docker registry to push the image (e.g., ghcr.io/org/app)'
        required: false
        default: 'ghcr.io'
        type: string

      run-trivy:
        description: 'Run Trivy Scan'
        required: false
        default: 'true'
        type: string

      run-grype:
        description: 'Run Grype Scan'
        required: false
        default: 'true'
        type: string

jobs:
  # This job handles versioning by generating a new tag based on the commit history
  version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.generate-tag.outputs.tag }}
    steps:
      # This step checks out the code from the repository
      - id: generate-tag
        uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/common/github-actions/git-tag-generation@v0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          conventional-commit: 'true' 
  
   # This job publishes the Docker image to GitHub Container Registry (GHCR) if a new tag is generated
  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: [version]
    if: ${{ needs.version.outputs.tag != '' }}
    permissions:
      contents: read
      packages: write  # Required to push to GHCR
    steps:
    # This job builds and publishes a Docker image to GitHub Container Registry (GHCR)
      - uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/common/docker-build-push@v0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ inputs.registry }}
          version: ${{ needs.version.outputs.tag }}

  docker-scan:
    runs-on: ubuntu-latest
    needs: [version, docker-build-and-push]
    if: ${{ needs.version.outputs.tag != '' }}
    permissions:
      contents: read
      packages: read 
    steps:
      # This job scans the Docker image for vulnerabilities using Trivy
      - uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/common/security-scanner/trivy-scan@v0
        if: ${{ inputs.run-trivy == 'true' }}
        with:
          version: ${{ needs.version.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          severity: 'CRITICAL,HIGH'

      - uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/common/github-actions/git-dashboard@v0
        if: ${{ inputs.run-trivy == 'true' }}
        with:
          tool: 'Trivy'
          report: 'trivy-report.txt'
          critical_keyword: 'CRITICAL'
          high_keyword: 'HIGH'

      # This job scans the Docker image for vulnerabilities using Grype
      - uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/common/security-scanner/grype-scan@v0
        if: ${{ inputs.run-grype == 'true' }}
        with:
          version: ${{ needs.version.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: altimetrik-digital-enablement-demo-hub/platform-github-actions/.github/actions/common/github-actions/git-dashboard@v0
        if: ${{ inputs.run-grype == 'true' }}
        with:
          tool: 'Grype'
          report: 'grype-report.txt'
          critical-keyword: 'CRITICAL'
          high-keyword: 'HIGH'
