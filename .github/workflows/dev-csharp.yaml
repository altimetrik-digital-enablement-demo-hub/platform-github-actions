name: build
on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
      language:
        required: false
        type: string
        default: 'csharp'
      git-fetch-depth:
        required: false
        type: string
        default: '1'
      dotnet-version:
        required: false
        type: string
        default: '9.0.300'
      dotnet-tools-restore:
        required: false
        type: boolean
        default: true
      dotnet-linter-csharpier:
        required: false
        type: boolean  
        default: true
      dotnet-linter-roslynator:
        required: false
        type: boolean  
        default: false
      azure_webapp_package_path:
        required: false
        type: string
        default: '.'
      
jobs:     
  lint:
    name: Lint C# code
    if: ${{ inputs.language == 'csharp' }}
    runs-on: 'ubuntu-latest'
    steps:
      - name: csharpier
        if: ${{ inputs.dotnet-linter-csharpier == true }}
        uses: dgeorgievski/my-github-actions/.github/actions/dotnet/lint/csharpier@composites
        with:
          app-name: ${{ inputs.app-name }}
          dotnet-version: ${{ inputs.dotnet-version }}
      - name: roslynator
        if: ${{ inputs.dotnet-linter-roslynator == true }}
        uses: dgeorgievski/my-github-actions/.github/actions/dotnet/lint/roslynator@composites
        with:
          app-name: ${{ inputs.app-name }}
          dotnet-version: ${{ inputs.dotnet-version }}
          restore: ${{ inputs.dotnet-tools-restore }}

  test:
    name: Test ${{ inputs.app-name }}
    needs: lint
    runs-on: 'ubuntu-latest'     
    steps:
      - uses: dgeorgievski/my-github-actions/.github/actions/dotnet/test@composites
        with:
          verbosity: 'normal'

  codeql:
    name: CodeQL Analysis for ${{ inputs.app-name }}
    needs: lint
    runs-on: 'ubuntu-latest'
    steps:
      - uses: dgeorgievski/my-github-actions/.github/actions/dotnet/codeql@composites
        with:
          app-name: ${{ inputs.app-name }}  
  build:
    name: Build ${{ inputs.app-name }}
    needs: test
    runs-on: 'ubuntu-latest'
    steps:
      - uses: dgeorgievski/my-github-actions/.github/actions/dotnet/build@composites
        with:
          app-name: ${{ inputs.app-name }}
          language: ${{ inputs.language }}
          dotnet-version: ${{ inputs.dotnet-version }}
          git-fetch-depth: ${{ inputs.git-fetch-depth }}   
          token: ${{ secrets.GITHUB_TOKEN }}  
  
  package:
    name: Package ${{ inputs.app-name }}
    needs: build
    runs-on: 'ubuntu-latest'
    steps:
      - uses: dgeorgievski/my-github-actions/.github/actions/dotnet/package@composites
        with:
          language: ${{ inputs.language }}
          app-name: ${{ inputs.app-name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          context: src/NetWebApi.API
          docker-file: src/NetWebApi.API/Dockerfile
          image-tag: ${{ needs.build.outputs.app_version }}
          push: true
  
  security:
    name: Security Scan for ${{ inputs.app-name }}
    needs: [build, package]
    runs-on: 'ubuntu-latest'
    steps:
      - uses: dgeorgievski/my-github-actions/.github/actions/dotnet/security-scan@composites
        with:
          registry: ghcr.io
          image-name: ${{ inputs.app-name }}
          image-tag: ${{ needs.build.outputs.app_version }}
          dockerFile: src/NetWebApi.API/Dockerfile
          token: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    name: Deploy ${{ inputs.app-name }}
    needs: security
    runs-on: 'ubuntu-latest'
    steps:
      - uses: dgeorgievski/my-github-actions/.github/actions/dotnet/deploy/azure-app-web-services@composites
        with:
          azure_webapp_name: ${{ inputs.app-name }}
          azure_webapp_package_path: ${{ inputs.azure_webapp_package_path }}
          azure_webapp_publish_profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          dotnet_version: ${{ inputs.dotnet-version }}

          
