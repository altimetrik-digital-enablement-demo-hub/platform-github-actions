name: Complete node Pipeline

on:
  workflow_call:
    inputs:
      node-version:
        description: "Node.js version to use"
        required: false
        default: '20'
        type: string

      working-directory:
        description: "Project root directory"
        required: false
        default: '.'
        type: string
      
      lint-command:
        description: 'Lint command (e.g., npm run lint)'
        required: false
        default: 'npm run lint'
        type: string
      
      registry:
        description: 'Docker registry to push the image (e.g., ghcr.io/org/app)'
        required: false
        default: 'ghcr.io'
        type: string

      build-command:
        description: 'build command (e.g., npm run)'
        required: false
        default: 'npm run build'
        type: string

      test-command:
        description: 'test command (e.g., npm test)'
        required: false
        default: 'npm test'
        type: string
        
      package-command:
        description: "Command to package the app"
        required: false
        default: 'npm pack'
        type: string

      artifact-name:
        description: "Name of the build artifact"
        required: false
        default: 'node-package'
        type: string
      
      run_trivy:
        description: 'Run Trivy Scan'
        required: false
        default: 'true'
        type: string

      run_grype:
        description: 'Run Grype Scan'
        required: false
        default: 'true'
        type: string

      continue-on-error:
        description: "Continue on error for linting"
        required: false
        default: 'true'
        type: string

jobs:
  # This job runs the linting process to ensure code quality
  lint:
    runs-on: ubuntu-latest
    steps:
    # This job sets up Node.js and runs the lint command
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/node/setup@testing
        with:
          node-version: ${{ inputs.node-version }}
          working-directory: ${{ inputs.working-directory }}

      # This job sets up Node.js and runs the lint command
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/node/lint@testing
        with:
          lint-command: ${{ inputs.lint-command }}
          node-version: ${{ inputs.node-version }}
          working-directory: ${{ inputs.working-directory }}
          continue-on-error: ${{ inputs.continue-on-error }}


  # This job builds the Node.js project, preparing it for packaging
  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      # This job sets up Node.js in the environment
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/node/setup@testing
        with:
          node-version: ${{ inputs.node-version }}
          working-directory: ${{ inputs.working-directory }}  

      # This job sets up Node.js and runs the build command
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/node/build@testing
        with:
          build-command: ${{ inputs.build-command }}
          node-version: ${{ inputs.node-version }}
          working-directory: ${{ inputs.working-directory }}
          token: ${{ secrets.GITHUB_TOKEN }}


  # This job executes unit test
  unit-test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      # This job sets up Node.js and runs unit tests
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/node/setup@testing
        with:
          node-version: ${{ inputs.node-version }}
          working-directory: ${{ inputs.working-directory }}
      # This step runs the unit tests using Jest
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/node/jest-unit-test@testing
        with:
          test-command: ${{ inputs.test-command }}
          continue-on-error: ${{ inputs.continue-on-error }}

  # This job runs CodeQL analysis to identify security vulnerabilities and code quality issues
  security-scan:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      # This job runs CodeQL analysis to identify security vulnerabilities and code quality issues
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/common/static-code-analysis/codeql@testing
        with:
          languages: javascript
          working-directory: ${{ inputs.working-directory }}
  
  # This job handles versioning by generating a new tag based on the commit history
  versioning:
    runs-on: ubuntu-latest
    needs: [build, unit-test]
    permissions:
      contents: write
    outputs:
      new_tag: ${{ steps.generate-tag.outputs.tag }}
    steps:
      # This step checks out the code from the repository
      - id: generate-tag
        uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/common/github-actions/git-tag-generation@testing
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  # This job publishes the Docker image to GitHub Container Registry (GHCR) if a new tag is generated
  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: versioning
    if: ${{ needs.versioning.outputs.new_tag != '' }}
    permissions:
      contents: read
      packages: write  # Required to push to GHCR
    steps:
    # This job builds and publishes a Docker image to GitHub Container Registry (GHCR)
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/common/docker-build-push@testing
        with:
          version: ${{ needs.versioning.outputs.new_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ inputs.registry }}

  docker-scan:
    runs-on: ubuntu-latest
    needs: [versioning, docker-build-and-push]
    if: ${{ needs.versioning.outputs.new_tag != '' }}
    permissions:
      contents: read
      packages: read 
    steps:
      # This job scans the Docker image for vulnerabilities using Trivy
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/common/security-scanner/trivy-scan@testing
        if: ${{ inputs.run_trivy == true }}
        with:
          version: ${{ needs.versioning.outputs.new_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          severity: 'CRITICAL,HIGH'

      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/common/github-actions/git-dashboard@testing
        if: ${{ inputs.run_trivy == true }}
        with:
          tool: 'Trivy'
          report: 'trivy-report.txt'
          critical_keyword: 'CRITICAL'
          high_keyword: 'HIGH'

      # This job scans the Docker image for vulnerabilities using Grype
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/common/security-scanner/grype-scan@testing
        if: ${{ inputs.run_grype == true }}
        with:
          version: ${{ needs.versioning.outputs.new_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/common/github-actions/git-dashboard@testing
        if: ${{ inputs.run_grype == true }}
        with:
          tool: 'Grype'
          report: 'grype-report.txt'
          critical-keyword: 'CRITICAL'
          high-keyword: 'HIGH'

  # This job packages the Node.js project, creating an artifact for deployment or distribution
  package:
    needs: versioning
    runs-on: ubuntu-latest
    steps:
      # This job sets up Node.js in the environment
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/node/setup@testing
        with:
          node-version: ${{ inputs.node-version }}
          working-directory: '.'
      # This step packages the Node.js project
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/common/github-actions/git-package@testing
        with:
          package-command: ${{ inputs.package-command }}
          artifact-name: ${{ inputs.artifact-name }}

  # This job generates a dashboard summarizing the results of the previous jobs
  dashboard:
    runs-on: ubuntu-latest
    needs: [lint, unit-test, docker-scan]
    if: always()
    steps:
      # This job generates a dashboard summarizing the results of the previous jobs
      - uses: KaranbirSinghAhluwalia/platform-github-actions/.github/actions/common/github-actions/git-dashboard@testing

