name: Node.js Unit Tests
description: "Runs unit tests for a Node.js project using Jest and uploads the results."
    
inputs:
  test-command:
    description: "Command to run unit tests"
    required: false
    default: 'npm test'
  continue-on-error:
    description: "Continue on error for unit tests"
    required: false
    default: 'true'



outputs:
  coverage-report:
    description: "Coverage report file"
    value: coverage/cobertura-coverage.xml


runs:
  using: composite
  steps:
    # Run the test command with additional flags
    - name: Run Unit Tests (continue on error)
      shell: bash
      if: inputs.continue-on-error == 'true'
      continue-on-error: true
      run: |
        echo "Running: ${{ inputs.test-command }} -- --coverage --json --outputFile=jest-report.json"
        ${{ inputs.test-command }} -- --coverage --json --outputFile=jest-report.json || true

    - name: Run Unit Tests (fail on error)
      shell: bash
      if: inputs.continue-on-error != 'true'
      run: |
        echo "Running: ${{ inputs.test-command }} -- --coverage --json --outputFile=jest-report.json"
        ${{ inputs.test-command }} -- --coverage --json --outputFile=jest-report.json || true

    # Upload JUnit XML test results
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-results/junit.xml

    # Annotate test failures
    - name: Annotate test failures
      uses: dorny/test-reporter@v1
      with:
        name: Jest Tests
        path: test-results/junit.xml
        reporter: jest-junit
        fail-on-error: false
