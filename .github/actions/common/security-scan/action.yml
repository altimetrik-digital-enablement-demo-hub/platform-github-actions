name: Security Scan
description: Runs CodeQL source code analysis and Trivy container vulnerability scanning

inputs:
  app-name:
    description: Name of the application
    required: true
  image-tag:
    description: Docker image tag to scan
    required: true
  languages:
    description: Programming languages to scan (comma-separated)
    required: false
    default: 'go'
  go-version:
    description: Go version for CodeQL analysis
    required: false
    default: '1.24'

runs:
  using: 'composite'
  steps:
    - name: Debug inputs
      shell: bash
      run: |
        echo "app-name: ${{ inputs.app-name }}"
        echo "image-tag: ${{ inputs.image-tag }}"
        echo "languages: ${{ inputs.languages }}"

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with: 
        languages: ${{ inputs.languages }}

    - name: Set up Go (if needed)
      if: contains(inputs.languages, 'go')
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}

    - name: Build for CodeQL
      shell: bash
      run: |
        if [[ "${{ inputs.languages }}" == *"go"* ]]; then
          go build ./...
        elif [[ "${{ inputs.languages }}" == *"python"* ]]; then
          echo "No build needed for Python"
        elif [[ "${{ inputs.languages }}" == *"csharp"* ]]; then
          dotnet build
        elif [[ "${{ inputs.languages }}" == *"javascript"* ]]; then
          npm ci
          npm run build || true
        fi

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      continue-on-error: true
      with:
        output: codeql-results
        upload: false

    - name: Upload CodeQL results as artifact
      uses: actions/upload-artifact@v4
      with:
        name: codeql-scan-results-${{ inputs.languages }}
        path: codeql-results

    - name: Download container image
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.app-name }}-image
        path: /tmp/

    - name: Load container image
      shell: bash
      run: docker load -i /tmp/${{ inputs.app-name }}.tar

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ inputs.app-name }}:${{ inputs.image-tag }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results as artifact
      uses: actions/upload-artifact@v4
      with:
        name: trivy-security-scan-results
        path: trivy-results.sarif

    - name: Generate security report
      shell: bash
      run: |
        echo "Security scan completed for ${{ inputs.app-name }}:${{ inputs.image-tag }}"
        echo "CodeQL results: codeql-scan-results-${{ inputs.languages }}"
        echo "Trivy results: trivy-security-scan-results"