name: Package Application
description: Downloads binary artifact, builds Docker image, and uploads image artifact

inputs:
  app-name:
    description: Name of the application
    required: true
  image-tag:
    description: Docker image tag
    required: true
  binary-artifact-name:
    description: Name of the binary artifact to download
    required: false
    default: 'go-binary'
  binary-name:
    description: Name of the binary file
    required: false
    default: 'app'
  dockerfile-path:
    description: Path to Dockerfile
    required: false
    default: './Dockerfile'
  docker-context:
    description: Docker build context
    required: false
    default: '.'

outputs:
  image-tag:
    description: "The Docker image tag that was used"
    value: ${{ inputs.image-tag }}

runs:
  using: 'composite'
  steps:
    - name: Debug inputs
      shell: bash
      run: |
        echo "app-name: ${{ inputs.app-name }}"
        echo "image-tag: ${{ inputs.image-tag }}"
        echo "binary-artifact-name: ${{ inputs.binary-artifact-name }}"
        echo "binary-name: ${{ inputs.binary-name }}"

    - name: Download binary artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.binary-artifact-name }}
        path: ./

    - name: Make binary executable
      shell: bash
      run: chmod +x ${{ inputs.binary-name }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.dockerfile-path }}
        platforms: linux/amd64
        tags: ${{ inputs.app-name }}:${{ inputs.image-tag }}
        outputs: type=docker,dest=/tmp/${{ inputs.app-name }}.tar

    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.app-name }}-image
        path: /tmp/${{ inputs.app-name }}.tar