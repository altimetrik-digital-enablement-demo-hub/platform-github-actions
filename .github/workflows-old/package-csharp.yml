name: Package dotnet Application
on:
  workflow_dispatch:
    inputs:
      language:
        description: 'Programming language of the application'
        required: true
        default: 'csharp'
        type: string
      app-name:
        description: 'Name of the application to package'
        default: 'netwebapi'
        required: true
        type: string
      context:
        description: 'Context for docker build'
        default: '.'
        required: false
        type: string
  workflow_call:
    inputs:
      language:
        required: true
        type: string
      app-name:
        required: true
        type: string
      context:
        description: 'Context for docker build'
        default: '.'
        required: false
        type: string
      dockerFile:
        description: 'Path to the Dockerfile'
        default: './Dockerfile'
        required: false
        type: string
      imageTag:
        description: 'Tag for the Docker image'
        default: 'latest'
        required: false
        type: string
      push:
        description: 'Push the image to the registry'
        default: false
        required: false
        type: boolean

env:
  DOTNET_VERSION: '9.0.300' # The .NET SDK version to use 
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ inputs.app-name || github.event.repository.name }}       

jobs:
  package-csharp:
    if: ${{ inputs.language == 'csharp' }}
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true  
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
          tags: |
            # type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ inputs.imageTag }}
            type=semver,pattern={{major}}.{{minor}}
            
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ${{ inputs.context || '.' }}
          file: ${{ inputs.dockerFile || './Dockerfile' }}
          push: ${{ inputs.push || false }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true
